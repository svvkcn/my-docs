import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as n,a as e,b as o}from"./app-302Urp1_.js";const a={},s=e("p",null,[o("明年一季度将推出鸿蒙OS next开发者预览版（纯血鸿蒙系统底座全线自研） 去掉传统Linux内核不再兼容安卓应用，开启系统独立战（2024年os系统元年） 面向万物互联时代的、全新的分布式操作系统 2019年开始一直向上发展在进步中 而生态上更是众人拾柴火焰高欣欣向荣 从高校开班的规划上看百万鸿蒙岗位是铁板钉钉 HarmonyOS1234的兼容问题来看，到了Next版本大概率也有兼容问题 HarmonyOS对于有基础的开发者来说入门很容易不费事，也不怎么费时间 OpenHarmony（OH）更有性价比，因为更加底层 学习路线上： 搭环境写个HelloWorld ArkTS语言：语法基础、UI规范、属性事件、组件配置、装饰器状态管理、渲染控制等等很前端 声明式UI：基础组件、容器组件、绘制画布动画弹窗手势等均可看下文档即可学会 进阶：stage模型、网络、数据、电话、一次开发多端部署、分布式、通知窗口等也是看文档即可 多媒体：音视频媒体会话图片相机 高级技能：进程通信、安全、任务、设备、webGL、国际化、测试、DFX 再深就是系统移植裁剪定制 当然如果做到南向开发那就超厉害了，物联网、媒体、驱动等内核级别开发 市场上音视频、车载、逆向安全、框架级都是很高深的方向 开发硬件上准备一个鸿蒙手机，甚至一个鸿蒙开发板 区别于安卓的最大之处是微内核 其他： 华为的HarmonyOS，去对标，谷歌的Fuchsia OS 华为HarmonyOS的ArkTS，去对标谷歌Fuchsia OS的Flutter ArkTS是基于微软的TS的类VUE底层是JS可用Node和谷歌V8引擎，对标Flutter是基于Dart Android的Jetpack Compose以及基于Dart语言开发的Flutter(跨平台)还有SwiftUI都很相似。 OpenHarmony对标AOSP(Android Open Source Project) "),e("strong",null,"ArkUI-X"),o(" 扩展ArkUI类似compose 和 compose-multiplatform 的关系 还可以了参考QT，Electron等发展趋势。没必要参考Windows Phone系统了，回想十年前， 也是各种os也是百花齐放比如诺基亚。")],-1),c=[s];function l(_,m){return t(),n("div",null,c)}const u=r(a,[["render",l],["__file","鸿蒙 杂谈.html.vue"]]);export{u as default};
