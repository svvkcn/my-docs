const e=JSON.parse('{"key":"v-70fd48b0","path":"/blog/html/COLA.html","title":"COLA","lang":"zh-CN","frontmatter":{"description":"https://github.com/alibaba/COLA COLA COLA 1 https://blog.csdn.net/significantfrank/article/details/85785565 因为系统变的复杂臃肿，最终形成了COLA，一个基于扩展点+元数据+CQRS+DDD的应用架构； 系统复杂性来源四个方面： 可扩展性差 扩展点（Extension Point），或者叫插件（Plug-in）的设计。 字段扩展。 面向过程 工程师要具备业务Sense，产品Sense，数据Sense，算法Sense，还要有工程能力。 不了解SOLID原则，不懂设计模式，不会画UML图，或者从来不会运实践。 （抽象能力，设计模式，架构模式，UML，以及阅读优秀框架源码） 不会进行领域建模 研读一下Eric Evans的《领域驱动设计》，升级认知。 DDD将业务语义显现化了。 Programs must be written for people to read, and only incidentally for machines to execute","head":[["meta",{"property":"og:url","content":"https://svvkcn.cn/my-docs/my-docs/blog/html/COLA.html"}],["meta",{"property":"og:site_name","content":"svvk.cn"}],["meta",{"property":"og:title","content":"COLA"}],["meta",{"property":"og:description","content":"https://github.com/alibaba/COLA COLA COLA 1 https://blog.csdn.net/significantfrank/article/details/85785565 因为系统变的复杂臃肿，最终形成了COLA，一个基于扩展点+元数据+CQRS+DDD的应用架构； 系统复杂性来源四个方面： 可扩展性差 扩展点（Extension Point），或者叫插件（Plug-in）的设计。 字段扩展。 面向过程 工程师要具备业务Sense，产品Sense，数据Sense，算法Sense，还要有工程能力。 不了解SOLID原则，不懂设计模式，不会画UML图，或者从来不会运实践。 （抽象能力，设计模式，架构模式，UML，以及阅读优秀框架源码） 不会进行领域建模 研读一下Eric Evans的《领域驱动设计》，升级认知。 DDD将业务语义显现化了。 Programs must be written for people to read, and only incidentally for machines to execute"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-10T18:44:33.000Z"}],["meta",{"property":"article:author","content":"svvk.cn"}],["meta",{"property":"article:modified_time","content":"2023-12-10T18:44:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"COLA\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-10T18:44:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"svvk.cn\\",\\"url\\":\\"https://www.svvk.cn\\"}]}"]]},"headers":[{"level":2,"title":"COLA 1","slug":"cola-1","link":"#cola-1","children":[]},{"level":2,"title":"系统复杂性来源四个方面：","slug":"系统复杂性来源四个方面","link":"#系统复杂性来源四个方面","children":[{"level":3,"title":"可扩展性差","slug":"可扩展性差","link":"#可扩展性差","children":[]},{"level":3,"title":"面向过程","slug":"面向过程","link":"#面向过程","children":[]},{"level":3,"title":"分层不合理","slug":"分层不合理","link":"#分层不合理","children":[]},{"level":3,"title":"随心所欲","slug":"随心所欲","link":"#随心所欲","children":[]}]},{"level":2,"title":"复杂性应对之道","slug":"复杂性应对之道","link":"#复杂性应对之道","children":[{"level":3,"title":"扩展点设计","slug":"扩展点设计","link":"#扩展点设计","children":[]},{"level":3,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[]},{"level":3,"title":"分层设计","slug":"分层设计","link":"#分层设计","children":[]},{"level":3,"title":"规范设计","slug":"规范设计","link":"#规范设计","children":[]}]}],"git":{"createdTime":1702233873000,"updatedTime":1702233873000,"contributors":[{"name":"svvk.cn","email":"ceo@svvk.cn","commits":1}]},"readingTime":{"minutes":3.25,"words":975},"filePathRelative":"blog/html/COLA.md","localizedDate":"2023年12月11日","excerpt":"<p>https://github.com/alibaba/COLA</p>\\n<h1> COLA</h1>\\n<h2> COLA 1</h2>\\n<p>https://blog.csdn.net/significantfrank/article/details/85785565\\n因为系统变的复杂臃肿，最终形成了COLA，一个基于扩展点+元数据+CQRS+DDD的应用架构；</p>\\n<h2> 系统复杂性来源四个方面：</h2>\\n<h3> 可扩展性差</h3>\\n<p>扩展点（Extension Point），或者叫插件（Plug-in）的设计。\\n字段扩展。</p>\\n<h3> 面向过程</h3>\\n<p>工程师要具备业务Sense，产品Sense，数据Sense，算法Sense，还要有工程能力。\\n不了解SOLID原则，不懂设计模式，不会画UML图，或者从来不会运实践。\\n（抽象能力，设计模式，架构模式，UML，以及阅读优秀框架源码）\\n不会进行领域建模\\n研读一下Eric Evans的《领域驱动设计》，升级认知。\\nDDD将业务语义显现化了。\\nPrograms must be written for people to read, and only incidentally for machines to execute</p>","autoDesc":true}');export{e as data};
